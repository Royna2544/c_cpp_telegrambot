name: Build TgBot++ (Linux)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - cc: GCC
            real_cc: gcc
            real_cxx: g++
            flags: -DENABLE_RUST_SUPPORT=ON
            str: (Rust)

          - cc: GCC
            real_cc: gcc
            real_cxx: g++
            flags: ''
            str: ''
          
          - cc: Clang
            real_cc: clang-18
            real_cxx: clang++-18
            flags: -DENABLE_RUST_SUPPORT=ON
            str: (Rust)

          - cc: Clang
            real_cc: clang-18
            real_cxx: clang++-18
            flags: ''
            str: ''

    name: ðŸš§ ${{ matrix.cc }} ${{ matrix.str }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set up dependencies
        run: |
          bash ./resources/scripts/setup_dependencies_apt.sh
      
      - name: Install latest clang
        if: matrix.cc == 'Clang'
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
  
      - name: 'ðŸš§ Build TgBot++'
        env:
          CC: ${{ matrix.real_cc }}
          CXX: ${{ matrix.real_cxx }}
        run: |
          mkdir build
          cmake -G Ninja -B build -DCMAKE_BUILD_TYPE=Debug ${{ matrix.flags }} .
          cmake --build build -j4

      - name: Run Tests
        env: 
          DATABASE_BACKEND: sqlite:new.db
        run: |
            ./build/bin/TgBot++_DatabaseCtl set_owner_id 12345
            ./build/bin/TgBot++_test
